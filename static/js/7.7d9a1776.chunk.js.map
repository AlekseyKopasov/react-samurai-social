{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormControls.module.scss","components/common/FormsControls/FormsControls.js","components/LoginPage/LoginForm.jsx","components/LoginPage/LoginPage.js"],"names":["required","value","undefined","maxLengthCreator","maxLength","length","module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","Input","autoComplete","autoCorrect","spellCheck","createField","type","placeholder","name","component","validators","text","validate","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"oIAAA,oEAAO,IAAMA,EAAW,SAACC,GAAD,OAAYA,OAAQC,EAAY,6FAAhC,EAEXC,EAAmB,SAACC,GAAD,OAAe,SAACH,GAAD,OAC7CA,GAASA,EAAMI,OAASD,EAAxB,kBAA+CA,EAA/C,4BAAgFF,CADnC,CAAf,C,sBCDhCI,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,uC,mRCInHC,EAAc,SAAC,GAAwD,EAAvDC,MAAwD,IAAD,IAAhDC,KAAOC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAQC,EAAwB,EAAxBA,SAC7CC,GADqE,iBAC1DH,GAAWC,GAE5B,OACE,sBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,IAAtE,UACGC,EACCC,GAAY,+BAAOF,MAG1B,EAEYM,EAAW,SAACC,GACvB,IAAOV,EAA6BU,EAA7BV,MAAgBW,GAAaD,EAAtBT,KAAd,YAAoCS,EAApC,IACA,OAAO,eAACX,EAAD,2BAAiBW,GAAjB,kBAAyB,oDAAcV,GAAWW,IAAlD,OACR,EAEYC,EAAQ,SAACF,GACpB,IAAOV,EAA6BU,EAA7BV,MAAgBW,GAAaD,EAAtBT,KAAd,YAAoCS,EAApC,IACA,OAAO,eAACX,EAAD,2BAAiBW,GAAjB,kBAAyB,6DAAWV,GAAWW,GAAtB,IAAiCE,aAAa,MAAMC,YAAY,MAAMC,WAAW,SAA1G,OACR,EAEYC,EAAc,SAACC,EAAMC,EAAaC,EAAMC,EAAWC,GAArC,IAAiDC,EAAjD,uDAAwD,KAAxD,OACzB,gCACE,cAAC,IAAD,CACEL,KAAMA,EACNC,YAAaA,EACbC,KAAMA,EACNC,UAAWA,EACXG,SAAUF,IANd,IAOMC,IARmB,C,+GCFZE,EAFQC,YAAU,CAAEC,KAAM,SAAlBD,EAhBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcxB,EAAW,EAAXA,MAChC,OACE,8BACE,uBAAMyB,SAAUD,EAAhB,UACGX,YAAY,OAAQ,QAAS,QAASJ,IAAO,CAACrB,MAC9CyB,YAAY,OAAQ,WAAY,WAAYJ,IAAO,CAACrB,MACpDyB,YAAY,WAAY,KAAM,aAAcJ,IAAO,KAAM,eACzDT,GAAS,qBAAKG,UAAWC,IAAOsB,iBAAvB,SAA2C1B,IACrD,8BACE,wBAAQc,KAAK,SAAb,yBAKT,I,eCOca,uBAJS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,OADG,GAIgB,CAACE,WAA1BJ,EArBG,SAAC,GAAqB,IAApBI,EAAmB,EAAnBA,MAKlB,OALqC,EAAZF,OAMhB,cAAC,IAAD,CAAUG,GAAI,aAIrB,gCACE,uCACA,cAAC,EAAD,CAAgBP,SAXH,SAACQ,GAChBF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WACnD,MAYF,G","file":"static/js/7.7d9a1776.chunk.js","sourcesContent":["export const required = (value) => (value ? undefined : 'Поле обязательно' )\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>\r\n  value && value.length > maxLength ? `Must be ${maxLength} characters or less` : undefined\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2kzXE\",\"error\":\"FormControls_error__oJv4V\",\"formSummaryError\":\"FormControls_formSummaryError__1QJRd\"};","import React from 'react'\r\nimport styles from './FormControls.module.scss'\r\nimport {required} from '../../../utils/validators/validators'\r\nimport {Field} from 'redux-form'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n  const hasError = touched && error\r\n\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      {children}\r\n      { hasError && <span>{error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}> <textarea {...input} {...restProps}/> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}> <input {...input} {...restProps} autoComplete=\"off\" autoCorrect=\"off\" spellCheck=\"off\"/> </FormControl>\r\n}\r\n\r\nexport const createField = (type, placeholder, name, component, validators, text = null) => (\r\n  <div>\r\n    <Field\r\n      type={type}\r\n      placeholder={placeholder}\r\n      name={name}\r\n      component={component}\r\n      validate={validators}\r\n    /> {text}\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {createField, Input} from '../common/FormsControls/FormsControls'\r\nimport {required} from '../../utils/validators/validators'\r\nimport styles from '../common/FormsControls/FormControls.module.scss'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        {createField(\"text\", \"Login\", \"email\", Input, [required])}\r\n        {createField(\"text\", \"Password\", \"password\", Input, [required])}\r\n        {createField(\"checkbox\", null, \"rememberMe\", Input, null, \"Remember me\")}\r\n        {error && <div className={styles.formSummaryError}>{ error }</div>}\r\n        <div>\r\n          <button type=\"submit\">Login</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default LoginReduxForm\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport LoginReduxForm from './LoginForm'\r\nimport {login} from '../../redux/reducers/authReducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst LoginPage = ({login, isAuth}) => {\r\n  const onSubmit = (formData) => {\r\n    login(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile'} />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(LoginPage)\r\n"],"sourceRoot":""}