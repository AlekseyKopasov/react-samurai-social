{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormControls.module.scss","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["required","value","undefined","maxLengthCreator","maxLength","length","module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","Input","autoComplete","autoCorrect","spellCheck","createField","type","placeholder","name","component","validators","text","validate","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","s","dialogItem","activeClassName","activeLink","MessageItem","message","maxLength50","DialogsReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","Dialogs","dialogsPage","dialogsElems","newMessageBody","dialogs","map","d","messagesElems","messages","m","Message","dialogsWrap","dialogsItems","textareaWrap","values","sendMessageCreator","compose"],"mappings":"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","file":"static/js/6.d0696c09.chunk.js","sourcesContent":["export const required = (value) => (value ? undefined : 'Поле обязательно' )\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>\r\n  value && value.length > maxLength ? `Must be ${maxLength} characters or less` : undefined\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2kzXE\",\"error\":\"FormControls_error__oJv4V\",\"formSummaryError\":\"FormControls_formSummaryError__1QJRd\"};","import React from 'react'\r\nimport styles from './FormControls.module.scss'\r\nimport {required} from '../../../utils/validators/validators'\r\nimport {Field} from 'redux-form'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n  const hasError = touched && error\r\n\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      {children}\r\n      { hasError && <span>{error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}> <textarea {...input} {...restProps}/> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}> <input {...input} {...restProps} autoComplete=\"off\" autoCorrect=\"off\" spellCheck=\"off\"/> </FormControl>\r\n}\r\n\r\nexport const createField = (type, placeholder, name, component, validators, text = null) => (\r\n  <div>\r\n    <Field\r\n      type={type}\r\n      placeholder={placeholder}\r\n      name={name}\r\n      component={component}\r\n      validate={validators}\r\n    /> {text}\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth)  return <Redirect to={'/login'} />\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__37dyb\",\"dialogsWrap\":\"Dialogs_dialogsWrap__1fkMz\",\"dialogsItems\":\"Dialogs_dialogsItems__YxR93\",\"dialogItem\":\"Dialogs_dialogItem__1nEj3\",\"activeLink\":\"Dialogs_activeLink__3-amD\",\"messages\":\"Dialogs_messages__1qmbS\",\"textareaWrap\":\"Dialogs_textareaWrap__1HuIQ\"};","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst DialogItem = props => {\r\n  const {name} = props\r\n  const path = `/dialogs/${props.id}`\r\n\r\n  return (\r\n    <li className={s.dialogItem}>\r\n      <NavLink to={path} activeClassName={s.activeLink}>{name}</NavLink>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst MessageItem = props => {\r\n  return (\r\n    <li className={s.message}>{props.message}</li>\r\n  )\r\n}\r\n\r\nexport default MessageItem\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Textarea} from '../common/FormsControls/FormsControls'\r\nimport {maxLengthCreator, required} from '../../utils/validators/validators'\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst DialogsForm = (props) => {\r\n  const { handleSubmit } = props\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field\r\n        placeholder=\"Your message\"\r\n        name=\"message\"\r\n        component={Textarea}\r\n        validate={[maxLength50]}\r\n      />\r\n      <button type=\"submit\">Send Message</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({ form: 'dialogs' })(DialogsForm)\r\n\r\nexport default DialogsReduxForm\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport MessageItem from './Message/Message'\r\nimport DialogsReduxForm from './DialogsForm'\r\n\r\nconst Dialogs = (props) => {\r\n  const state = props.dialogsPage\r\n  const newMessageBody = state.newMessageBody\r\n\r\n  const dialogsElems = state.dialogs\r\n    .map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n\r\n  const messagesElems = state.messages\r\n    .map(m => <MessageItem message={m.message} key={m.id}/>)\r\n\r\n  const onSubmit = (values) => {\r\n    props.sendMessageCreator(values.message)\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsWrap}>\r\n        <ul className={s.dialogsItems}>\r\n          { dialogsElems }\r\n        </ul>\r\n\r\n        <ul className={s.messages}>\r\n          { messagesElems }\r\n        </ul>\r\n      </div>\r\n\r\n      <div className={s.textareaWrap}>\r\n        <DialogsReduxForm\r\n          onSubmit={onSubmit}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","import {sendMessageCreator} from '../../redux/reducers/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport {compose} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps,{sendMessageCreator}),\r\n)(Dialogs)\r\n"],"sourceRoot":""}